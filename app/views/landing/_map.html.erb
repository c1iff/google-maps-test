<h4>This is the map</h4>
<div id="map">

</div>

<script type="text/javascript">
<% if @user_origin && @user_destination %>
  function initMap() {
     var directionsService = new google.maps.DirectionsService;
     var directionsDisplay = new google.maps.DirectionsRenderer;

     var map = new google.maps.Map(document.getElementById('map'), {
       zoom: 7
     });
     calculateAndDisplayRoute(directionsService, directionsDisplay);

     directionsDisplay.setMap(map);

   }

   function calculateAndDisplayRoute(directionsService, directionsDisplay) {
     directionsService.route({
       origin: '<%= @user_origin %>',
       destination: '<%= @user_destination %>',
       travelMode: '<%= @transit_method %>'
     }, function(response, status) {
       if (status === 'OK') {
         directionsDisplay.setDirections(response);
       } else {
         window.alert('Directions request failed due to ' + status);
       }
     });
   }
 <% elsif @user_place %>
   function initMap() {
     var landing = {lat: <%= @user_latlng[:lat] %>, lng: <%= @user_latlng[:lng] %>};
     var map = new google.maps.Map(document.getElementById('map'), {
       zoom: 12,
       center: landing
     });
     var marker = new google.maps.Marker({
       position: landing,
       map: map
     });
   }
 <% else %>
   function initMap() {
     var landing = {lat: 45.5051, lng: -122.605};
     var map = new google.maps.Map(document.getElementById('map'), {
       zoom: 12,
       center: landing
     });
     var marker = new google.maps.Marker({
       position: landing,
       map: map
     });
   }
 <% end %>





 // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: 'M7lc1UVf-VE',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }
</script>
